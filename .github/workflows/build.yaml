name: 'publish'
on:
  push:
    branches:
      - main

jobs:
  publish:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3.3.0

      - name: Rust setup
        uses: dtolnay/rust-toolchain@nightly

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          shared-key: "vrc"

      - name: build
        run: cargo build --release

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v1.0.0-${{ matrix.platform }}
          release_name: Release v1.0.0
          draft: true
          prerelease: false

      - name: Upload Release Asset (Windows only)
        if: matrix.platform == 'windows-latest'
        id: upload-release-asset-windows
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/release/vrcapi_proxy.exe
          asset_name: vrcapi_proxy.exe
          asset_content_type: application/octet-stream

      - name: Upload Release Asset
        if: matrix.platform != 'windows-latest'
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/release/vrcapi_proxy
          asset_name: ${{ matrix.platform }}-vrcapi_proxy
          asset_content_type: application/octet-stream
